<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Albert's Blog</title><link>https://pospospos2007.github.io</link><description>My personal website https://albert6.com</description><copyright>Albert's Blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/11675650?v=4</url><title>avatar</title><link>https://pospospos2007.github.io</link></image><lastBuildDate>Fri, 21 Jun 2024 19:59:28 +0000</lastBuildDate><managingEditor>Albert's Blog</managingEditor><ttl>60</ttl><webMaster>Albert's Blog</webMaster><item><title>Kubernetes developer notes</title><link>https://pospospos2007.github.io/post/Kubernetes%20developer%20notes.html</link><description>Cheetsheet&#13;
https://kubernetes.io/docs/reference/kubectl/cheatsheet/ &#13;
 &#13;
 kubectl get nodes -o wide&#13;
&#13;
Login Azure cluster&#13;
az aks get-credentials --resource-group myResourceGroup --name myAKSCluster&#13;
 &#13;
 &#13;
kubectl get nodes&#13;
kubectl get services  &#13;
kubectl apply -f azure-vote.yaml&#13;
kubectl get service azure-vote-front --watch&#13;
kubectl get secret&#13;
kubectl expose deployment eiot-backend --type=LoadBalancer --name=my-service&#13;
 https://kubernetes.io/docs/tutorials/stateless-application/expose-external-ip-address/&#13;
 &#13;
kubectl get secrets     &#13;
kubectl describe secret/db-credentials-c2hd54k784     &#13;
 &#13;
 &#13;
 &#13;
Apply file:&#13;
apiVersion:kustomize.config.k8s.io/v1beta1&#13;
kind:Kustomization&#13;
generatorOptions:&#13;
disableNameSuffixHash:true&#13;
labels:&#13;
foo:bar&#13;
secretGenerator:&#13;
-name:eiot-dev-credentials&#13;
literals:&#13;
-JWT_SECRET=123&#13;
kubectl apply -k .&#13;
 &#13;
 &#13;
access the pod’s bash shell:&#13;
kubectl exec -it [pod] -- /bin/bash&#13;
 &#13;
Get pod's logs:&#13;
kubectl logs -f  pinot-zookeeper-0 --namespace=pinot-quickstart &#13;
 &#13;
 &#13;
Confimap:&#13;
kubectl get configmaps&#13;
kubectl describe configmaps eiot-dev-config&#13;
 &#13;
# Create the configmap from file&#13;
kubectl create configmap game-config --from-file=configure-pod-container/configmap/&#13;
Apply configmap yml:&#13;
 kubectl apply -k .&#13;
 &#13;
 &#13;
kubectl apply -f azure-vote.yaml&#13;
 &#13;
kubectl get pods --namespace=&lt;insert-namespace-name-here&gt;&#13;
 &#13;
Fixing terminating status&#13;
kubectl patch pv jhooq-pv -p '{'metadata':{'finalizers':null}}'&#13;
kubectl patch pvc jhooq-pv-claim -p '{'metadata':{'finalizers':null}}'&#13;
 &#13;
 &#13;
restart the  pod:&#13;
kubectl get pod pinot-controller-0 -n pinot-quickstart -o yaml | kubectl replace --force -f -&#13;
 &#13;
Create namespace&#13;
kubectl create ns pinot  &#13;
 &#13;
Add domain dns name:&#13;
(add it under annotations tag)con&#13;
 &#13;
service.beta.kubernetes.io/azure-dns-label-name: seveniotbackenddev&#13;
 &#13;
 &#13;
 &#13;
 &#13;
 &#13;
Latest eiot backend env values:&#13;
 &#13;
related kubectl  command:&#13;
 &#13;
seveniotbackendtest&#13;
 &#13;
kubectl apply -k .  --namespace=backend-app-node&#13;
kubectl logs -f &lt;pod name&gt; --namespace=backend-node&#13;
kubectl get pod &lt;pod name&gt; -n backend-node -o yaml | kubectl replace --force -f -&#13;
 &#13;
 &#13;
 &#13;
 &#13;
kubectl describe configmaps eiot-dev-config --namespace=backend-node&#13;
 &#13;
 &#13;
 &#13;
 &#13;
 &#13;
kubectl delete pod -n kube-system  -l k8s-app=kube-dns&#13;
 &#13;
 &#13;
Create tls lincese&#13;
 &#13;
openssl genrsa -out tls.key 2048&#13;
openssl req -new -key tls.key -out tls.csr&#13;
openssl x509 -req -days 365 -in tls.csr -signkey tls.key -out tls.crt&#13;
 &#13;
Install ingress&#13;
https://platform9.com/learn/v1.0/tutorials/nginix-controller-via-yaml&#13;
 &#13;
Caddy ingress&#13;
https://markheath.net/post/simple-aks-https-with-caddy&#13;
kubectl create namespace caddy-system&#13;
sudo kubectl apply -f mycaddy.yaml &#13;
kubectl apply -f caddyingress_iot-api-dev.yaml&#13;
kubectl create secret  tls mycerts --key ./tls.key --cert ./tls.crt -n backend-app-node&#13;
&#13;
Deleting all pods and ingress then add ingress with certs.&#13;
&#13;
Fix error:&#13;
Error from server (InternalError): error when creating 'caddyingress_iot-api-dev.yaml': Internal error occurred: failed calling webhook 'validate.nginx.ingress.kubernetes.io': failed to call webhook: Post '[https://ingress-nginx-controller-admission.ingress-basic.svc:443/networking/v1/ingresses?timeout=10s](https://ingress-nginx-controller-admission.ingress-basic.svc/networking/v1/ingresses?timeout=10s)': service 'ingress-nginx-controller-admission' not found&#13;
:&#13;
kubectl delete -A ValidatingWebhookConfiguration ingress-nginx-admission&#13;
&#13;
&#13;
PFX file to crt file&#13;
https://ibm.com/docs/en/arl/9.7?topic=certification-extracting-certificate-keys-from-pfx-file&#13;
&#13;
&#13;
Spark setup&#13;
https://testdriven.io/blog/deploying-spark-on-kubernetes/&#13;
&#13;
How to check space left of pod&#13;
kubectl -n pinot exec pinot-zookeeper-0 -- df -ah&#13;
&#13;
&#13;
&#13;
Remove table from pinot with name like new&#13;
Change the logging level for docker thingstack&#13;
 &#13;
Get docker log file path - docker inspect --format='{{.LogPath}}' $INSTANCE_ID&#13;
Command to clear docker log - truncate -s 0 /home/document/path&#13;
&#13;
&#13;
How to run command inside the kubenetetes pod&#13;
 kubectl exec -it spark-master-59dd99bf6-j46p9 -- /bin/bash -c 'ls'。</description><guid isPermaLink="true">https://pospospos2007.github.io/post/Kubernetes%20developer%20notes.html</guid><pubDate>Thu, 20 Jun 2024 07:48:36 +0000</pubDate></item></channel></rss>